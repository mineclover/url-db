{
  "version": "1.0.0",
  "server_info": {
    "name": "url-db-mcp-server",
    "version": "1.0.0",
    "composite_key_format": "url-db:domain:id"
  },
  "tools": {
    "list_domains": {
      "name": "list_domains",
      "category": "domain",
      "description": "Get all domains",
      "parameters": {}
    },
    "create_domain": {
      "name": "create_domain",
      "category": "domain",
      "description": "Create new domain for organizing URLs",
      "parameters": {
        "name": {
          "type": "string",
          "required": true,
          "description": "Domain name"
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "Domain description"
        }
      }
    },
    "list_nodes": {
      "name": "list_nodes",
      "category": "node",
      "description": "List URLs in domain",
      "parameters": {
        "domain_name": {
          "type": "string",
          "required": true,
          "description": "Domain name to list nodes from"
        },
        "page": {
          "type": "integer",
          "required": false,
          "default": 1,
          "description": "Page number"
        },
        "size": {
          "type": "integer",
          "required": false,
          "default": 20,
          "description": "Page size"
        },
        "search": {
          "type": "string",
          "required": false,
          "description": "Search query"
        }
      }
    },
    "create_node": {
      "name": "create_node",
      "category": "node",
      "description": "Add URL to domain",
      "parameters": {
        "domain_name": {
          "type": "string",
          "required": true,
          "description": "Domain name"
        },
        "url": {
          "type": "string",
          "required": true,
          "description": "URL to store"
        },
        "title": {
          "type": "string",
          "required": false,
          "description": "Node title"
        },
        "description": {
          "type": "string",
          "required": false,
          "description": "Node description"
        }
      }
    },
    "get_node": {
      "name": "get_node",
      "category": "node",
      "description": "Get URL details",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID (format: tool:domain:id)"
        }
      }
    },
    "update_node": {
      "name": "update_node",
      "category": "node",
      "description": "Update URL title or description",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID (format: tool:domain:id)"
        },
        "title": {
          "type": "string",
          "required": false,
          "description": "New title"
        },
        "description": {
          "type": "string",
          "required": false,
          "description": "New description"
        }
      }
    },
    "delete_node": {
      "name": "delete_node",
      "category": "node",
      "description": "Remove URL",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID (format: tool:domain:id)"
        }
      }
    },
    "find_node_by_url": {
      "name": "find_node_by_url",
      "category": "node",
      "description": "Search by exact URL",
      "parameters": {
        "domain_name": {
          "type": "string",
          "required": true,
          "description": "Domain name"
        },
        "url": {
          "type": "string",
          "required": true,
          "description": "URL to find"
        }
      }
    },
    "get_node_attributes": {
      "name": "get_node_attributes",
      "category": "attribute",
      "description": "Get URL tags and attributes",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID (format: tool:domain:id)"
        }
      }
    },
    "set_node_attributes": {
      "name": "set_node_attributes",
      "category": "attribute",
      "description": "Add or update URL tags",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID (format: tool:domain:id)"
        },
        "attributes": {
          "type": "array",
          "required": true,
          "description": "Array of attributes to set",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "required": true,
                "description": "Attribute name"
              },
              "value": {
                "type": "string",
                "required": true,
                "description": "Attribute value"
              },
              "order_index": {
                "type": "integer",
                "required": false,
                "description": "Order index (required for ordered_tag type)"
              }
            }
          }
        },
        "auto_create_attributes": {
          "type": "boolean",
          "required": false,
          "default": true,
          "description": "Automatically create attributes if they don't exist"
        }
      }
    },
    "list_domain_attributes": {
      "name": "list_domain_attributes",
      "category": "schema",
      "description": "Get available tag types for domain",
      "parameters": {
        "domain_name": {
          "type": "string",
          "required": true,
          "description": "The domain to list attributes for"
        }
      }
    },
    "create_domain_attribute": {
      "name": "create_domain_attribute",
      "category": "schema",
      "description": "Define new tag type for domain",
      "parameters": {
        "domain_name": {
          "type": "string",
          "required": true,
          "description": "The domain to add attribute to"
        },
        "name": {
          "type": "string",
          "required": true,
          "description": "Attribute name"
        },
        "type": {
          "type": "string",
          "required": true,
          "description": "One of: tag, ordered_tag, number, string, markdown, image",
          "enum": [
            "tag",
            "ordered_tag",
            "number",
            "string",
            "markdown",
            "image"
          ]
        },
        "description": {
          "type": "string",
          "required": false,
          "description": "Human-readable description"
        }
      }
    },
    "get_domain_attribute": {
      "name": "get_domain_attribute",
      "category": "schema",
      "description": "Get tag type details",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID (format: tool-name:domain:attr-{id})"
        }
      }
    },
    "update_domain_attribute": {
      "name": "update_domain_attribute",
      "category": "schema",
      "description": "Update tag type description",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID (format: tool-name:domain:attr-{id})"
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "New description"
        }
      }
    },
    "delete_domain_attribute": {
      "name": "delete_domain_attribute",
      "category": "schema",
      "description": "Remove unused tag type",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID (format: tool-name:domain:attr-{id})"
        }
      }
    },
    "get_node_with_attributes": {
      "name": "get_node_with_attributes",
      "category": "query",
      "description": "Get URL with all tags at once",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID (format: tool-name:domain:id)"
        }
      }
    },
    "filter_nodes_by_attributes": {
      "name": "filter_nodes_by_attributes",
      "category": "query",
      "description": "Search URLs by tag values",
      "parameters": {
        "domain_name": {
          "type": "string",
          "required": true,
          "description": "Domain name to search in"
        },
        "filters": {
          "type": "array",
          "required": true,
          "description": "Array of attribute filters",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "required": true,
                "description": "Attribute name"
              },
              "value": {
                "type": "string",
                "required": true,
                "description": "Attribute value to match"
              },
              "operator": {
                "type": "string",
                "required": false,
                "default": "equals",
                "description": "Comparison operator",
                "enum": [
                  "equals",
                  "contains",
                  "starts_with",
                  "ends_with"
                ]
              }
            }
          }
        },
        "page": {
          "type": "integer",
          "required": false,
          "default": 1,
          "description": "Page number"
        },
        "size": {
          "type": "integer",
          "required": false,
          "default": 20,
          "description": "Page size"
        }
      }
    },
    "create_subscription": {
      "name": "create_subscription",
      "category": "subscription",
      "description": "Subscribe to node events",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID of node to subscribe to"
        },
        "subscriber_service": {
          "type": "string",
          "required": true,
          "description": "Service identifier for subscriber"
        },
        "subscriber_endpoint": {
          "type": "string",
          "required": false,
          "description": "Webhook endpoint for notifications"
        },
        "event_types": {
          "type": "array",
          "required": true,
          "description": "Event types to subscribe to",
          "items": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "deleted",
              "attribute_changed",
              "connection_changed"
            ]
          }
        },
        "filter_conditions": {
          "type": "object",
          "required": false,
          "description": "Optional filter conditions for events"
        }
      }
    },
    "list_subscriptions": {
      "name": "list_subscriptions",
      "category": "subscription",
      "description": "List all subscriptions for a service",
      "parameters": {
        "service_name": {
          "type": "string",
          "required": false,
          "description": "Filter by service name (optional)"
        },
        "page": {
          "type": "integer",
          "required": false,
          "default": 1,
          "description": "Page number"
        },
        "size": {
          "type": "integer",
          "required": false,
          "default": 20,
          "description": "Page size"
        }
      }
    },
    "get_node_subscriptions": {
      "name": "get_node_subscriptions",
      "category": "subscription",
      "description": "Get all subscriptions for a specific node",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID of node to check subscriptions for"
        }
      }
    },
    "delete_subscription": {
      "name": "delete_subscription",
      "category": "subscription",
      "description": "Cancel a subscription",
      "parameters": {
        "subscription_id": {
          "type": "integer",
          "required": true,
          "description": "ID of subscription to delete"
        }
      }
    },
    "create_dependency": {
      "name": "create_dependency",
      "category": "dependency",
      "description": "Create dependency relationship between nodes",
      "parameters": {
        "dependent_node_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID of dependent node"
        },
        "dependency_node_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID of dependency node"
        },
        "dependency_type": {
          "type": "string",
          "required": true,
          "description": "Type of dependency",
          "enum": [
            "hard",
            "soft",
            "reference"
          ]
        },
        "cascade_delete": {
          "type": "boolean",
          "required": false,
          "default": false,
          "description": "Delete dependent when dependency is deleted"
        },
        "cascade_update": {
          "type": "boolean",
          "required": false,
          "default": false,
          "description": "Notify dependent when dependency is updated"
        },
        "metadata": {
          "type": "object",
          "required": false,
          "description": "Additional metadata for the dependency"
        }
      }
    },
    "list_node_dependencies": {
      "name": "list_node_dependencies",
      "category": "dependency",
      "description": "Get all dependencies for a node",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID of node to check dependencies for"
        }
      }
    },
    "list_node_dependents": {
      "name": "list_node_dependents",
      "category": "dependency",
      "description": "Get all nodes that depend on this node",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID of node to check dependents for"
        }
      }
    },
    "delete_dependency": {
      "name": "delete_dependency",
      "category": "dependency",
      "description": "Remove dependency relationship",
      "parameters": {
        "dependency_id": {
          "type": "integer",
          "required": true,
          "description": "ID of dependency to delete"
        }
      }
    },
    "get_node_events": {
      "name": "get_node_events",
      "category": "event",
      "description": "Get event history for a node",
      "parameters": {
        "composite_id": {
          "type": "string",
          "required": true,
          "description": "Composite ID of node to get events for"
        },
        "limit": {
          "type": "integer",
          "required": false,
          "default": 50,
          "description": "Maximum number of events to return"
        }
      }
    },
    "get_pending_events": {
      "name": "get_pending_events",
      "category": "event",
      "description": "Get unprocessed events for processing",
      "parameters": {
        "limit": {
          "type": "integer",
          "required": false,
          "default": 100,
          "description": "Maximum number of events to return"
        }
      }
    },
    "process_event": {
      "name": "process_event",
      "category": "event",
      "description": "Mark an event as processed",
      "parameters": {
        "event_id": {
          "type": "integer",
          "required": true,
          "description": "ID of event to mark as processed"
        }
      }
    },
    "get_event_stats": {
      "name": "get_event_stats",
      "category": "event",
      "description": "Get system event statistics",
      "parameters": {}
    },
    "get_server_info": {
      "name": "get_server_info",
      "category": "meta",
      "description": "Get server info",
      "parameters": {}
    }
  },
  "categories": {
    "domain": "Domain management operations",
    "node": "Node/URL CRUD operations",
    "attribute": "Node attribute management",
    "schema": "Domain schema management",
    "query": "Advanced query operations",
    "subscription": "Event subscription management",
    "dependency": "Node dependency management",
    "event": "Event tracking and processing",
    "meta": "Server metadata and information"
  }
}