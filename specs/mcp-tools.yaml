# MCP Tools Specification
# Single source of truth for all MCP tool names and schemas
version: "1.0.0"
server_info:
  name: "url-db-mcp-server"
  version: "1.0.0"
  composite_key_format: "url-db:domain:id"

tools:
  # Domain Management
  list_domains:
    name: "list_domains"
    category: "domain"
    description: "Retrieve all available domains with their metadata and URL counts. Essential for understanding the organizational structure of stored URLs."
    usage: "Use when you need to see what domains are available or get domain statistics before working with URLs."
    parameters: {}
    
  create_domain:
    name: "create_domain"
    category: "domain"
    description: "Create a new domain for organizing URLs. Domains act as namespaces that group related URLs together."
    usage: "Use when adding URLs from a new website or creating a new category for URL organization."
    parameters:
      name: { type: "string", required: true, description: "Domain name" }
      description: { type: "string", required: true, description: "Domain description" }

  # Node Management
  list_nodes:
    name: "list_nodes"
    category: "node"
    description: "List all URLs (nodes) within a domain with pagination and search support. Returns URL metadata including titles and descriptions."
    usage: "Use to browse URLs in a domain, search for specific content, or get an overview of stored URLs."
    parameters:
      domain_name: { type: "string", required: true, description: "Domain name to list nodes from" }
      page: { type: "integer", required: false, default: 1, description: "Page number" }
      size: { type: "integer", required: false, default: 20, description: "Page size" }
      search: { type: "string", required: false, description: "Search query" }
      
  create_node:
    name: "create_node"
    category: "node"
    description: "Add a new URL to a domain with optional title and description. The URL becomes searchable and can have attributes attached."
    usage: "Use when saving a new URL you want to remember, categorize, or reference later."
    parameters:
      domain_name: { type: "string", required: true, description: "Domain name" }
      url: { type: "string", required: true, description: "URL to store" }
      title: { type: "string", required: false, description: "Node title" }
      description: { type: "string", required: false, description: "Node description" }
      
  get_node:
    name: "get_node"
    category: "node"
    description: "Retrieve complete details about a specific URL including all its metadata and when it was added."
    usage: "Use when you need full information about a URL you've previously saved."
    parameters:
      composite_id: { type: "string", required: true, description: "Composite ID (format: tool:domain:id)" }
      
  update_node:
    name: "update_node"
    category: "node"
    description: "Modify the title or description of an existing URL to keep information current and accurate."
    usage: "Use when you want to improve the description or fix the title of a saved URL."
    parameters:
      composite_id: { type: "string", required: true, description: "Composite ID (format: tool:domain:id)" }
      title: { type: "string", required: false, description: "New title" }
      description: { type: "string", required: false, description: "New description" }
      
  delete_node:
    name: "delete_node"
    category: "node"
    description: "Permanently remove a URL and all its associated attributes from the system."
    usage: "Use when a URL is no longer relevant or needed in your collection."
    parameters:
      composite_id: { type: "string", required: true, description: "Composite ID (format: tool:domain:id)" }
      
  find_node_by_url:
    name: "find_node_by_url"
    category: "node"
    description: "Search for a URL within a domain to check if it's already saved and get its metadata."
    usage: "Use before adding a URL to avoid duplicates or to find an existing URL's details."
    parameters:
      domain_name: { type: "string", required: true, description: "Domain name" }
      url: { type: "string", required: true, description: "URL to find" }

  # Node Attributes
  get_node_attributes:
    name: "get_node_attributes"
    category: "attribute"
    description: "Retrieve all attribute values (tags, metadata) assigned to a specific URL."
    usage: "Use to see how a URL is categorized and what metadata has been added to it."
    parameters:
      composite_id: { type: "string", required: true, description: "Composite ID (format: tool:domain:id)" }
      
  set_node_attributes:
    name: "set_node_attributes"
    category: "attribute"
    description: "Add or update multiple attribute values for a URL in a single operation."
    usage: "Use when tagging a URL with categories, ratings, notes, or other metadata."
    parameters:
      composite_id: { type: "string", required: true, description: "Composite ID (format: tool:domain:id)" }
      attributes: 
        type: "array"
        required: true
        description: "Array of attributes to set"
        items:
          type: "object"
          properties:
            name: { type: "string", required: true, description: "Attribute name" }
            value: { type: "string", required: true, description: "Attribute value" }
            order_index: { type: "integer", required: false, description: "Order index (required for ordered_tag type)" }
      auto_create_attributes: { type: "boolean", required: false, default: true, description: "Automatically create attributes if they don't exist" }

  # Domain Schema Management
  list_domain_attributes:
    name: "list_domain_attributes"
    category: "schema"
    description: "Get all available attribute types for a domain including their names, types, and descriptions."
    usage: "Use to see what tags and metadata fields are available before adding attributes to URLs."
    parameters:
      domain_name: { type: "string", required: true, description: "The domain to list attributes for" }
      
  create_domain_attribute:
    name: "create_domain_attribute"
    category: "schema"
    description: "Define a new attribute type (tag, number, text, etc.) that can be applied to URLs in a domain."
    usage: "Use when you want to create a new way to categorize or add metadata to your URLs."
    parameters:
      domain_name: { type: "string", required: true, description: "The domain to add attribute to" }
      name: { type: "string", required: true, description: "Attribute name" }
      type: { type: "string", required: true, description: "One of: tag, ordered_tag, number, string, markdown, image", enum: ["tag", "ordered_tag", "number", "string", "markdown", "image"] }
      description: { type: "string", required: false, description: "Human-readable description" }
      
  get_domain_attribute:
    name: "get_domain_attribute"
    category: "schema"
    description: "Get detailed information about a specific attribute including its type and validation rules."
    usage: "Use when you need to understand the format or constraints of an attribute before using it."
    parameters:
      composite_id: { type: "string", required: true, description: "Composite ID (format: tool-name:domain:attr-{id})" }
      
  update_domain_attribute:
    name: "update_domain_attribute"
    category: "schema"
    description: "Update the description or other properties of a domain attribute."
    usage: "Use when you need to modify attribute metadata or descriptions."
    parameters:
      composite_id: { type: "string", required: true, description: "Composite ID (format: tool-name:domain:attr-{id})" }
      description: { type: "string", required: true, description: "New description" }
      
  delete_domain_attribute:
    name: "delete_domain_attribute"
    category: "schema"
    description: "Remove an attribute type from a domain's schema."
    usage: "Use when an attribute is no longer needed for a domain."
    parameters:
      composite_id: { type: "string", required: true, description: "Composite ID (format: tool-name:domain:attr-{id})" }


  # Server Information
  get_server_info:
    name: "get_server_info"
    category: "meta"
    description: "Get server capabilities, version information, and configuration details for integration planning."
    usage: "Use to understand what features are available and how to format composite keys."
    parameters: {}

# Tool Categories
categories:
  domain: "Domain management operations"
  node: "Node/URL CRUD operations"
  attribute: "Node attribute management"
  schema: "Domain schema management"
  meta: "Server metadata and information"